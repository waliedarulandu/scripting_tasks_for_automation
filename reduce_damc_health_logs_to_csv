#!/bin/bash
#---------------------------------------------------------------------------------------#
# Script: reduce_damc_health_logs_to_csv
# Author: Walied Arulandu
# Created on: Wed 04 May 2022 12:15:51 SAST
# Description: Reduce data of the damc health logs and convert to csv type format using the pipe character.
# Modified on: Wed 04 May 2022 12:15:51 SAST
#--------------------------------------------------------------------------------------#
#
#
#

job_start_date=$(date +%s)

path_to_archived_logs=/usr/share/grafana/logs/shared/damc_archived_logs
path_to_uncompressed_logs=/usr/share/grafana/logs/shared/damc_uncompressed_logs
path_to_csv_logs=/usr/share/grafana/logs/shared/damc_csv_logs

echo -e "\nJob $job_start_date is starting now...\n"

# Starting uncompressing job here...

echo -e "\nUncompressing archived logs now...\n"

#for file_name in $( ls $path_to_archived_logs )
#do 
#  if [ -f $path_to_archived_logs/$file_name ]
#  then
#    tar -xjf $path_to_archived_logs/$file_name -C $path_to_uncompressed_logs
#  fi
#done
#
# Starting normalizing job here...
#
echo -e "\nNormalizing log files now...\n"

for file_name in $( ls $path_to_uncompressed_logs/*.log )
do
  cat -etv $file_name | sed '/^$\|spawn\|Password\|DH4544\|System\|Version\|#\|Encl\|Drawer\|Overall Unit Status\|Press any key to continue (Q to quit)\|--------/d'| sed 's/\^\^M$//g;s/\^M\$//g;s/ C //g;s/%//g;s/ OK //g;s/ Not Installed //g;s/On-board SAS2008 Temperature-Ctlr A/On-board SAS2008 Temp-Ctlr A       /g;s/On-board SAS2008 Temperature-Ctlr B/On-board SAS2008 Temp-Ctlr B       /g;s/IOC Temperature-Ctlr A/IOC Temp-Ctlr A/g;s/IOC Temperature-Ctlr B/IOC Temp-Ctlr B/g;s/\b\s\b/_/g;s/./&|/1;s/./&|/40;s/[[:space:]]//g' #> $file_name.tmp

  ((counter++)) 

  if [ $counter > 2 ]
  then
    break
  fi
done
#
#Starting csv job here...
#
echo -e "\nCreating csv output files now...\n"

#for file_name in $( ls $path_to_uncompressed_logs/*.tmp )
#do
#  while IFS=' ' read -r line
#  do
    #line_array=($line)
    #echo ${line_array[2]}
#  done < $file_name
#done

#
#Cleaning up job starting here...
#
echo -e "\nRemoving compressed archives from $path_to_archived_logs\n"
#rm -r $path_to_archived_logs/*.bz2
echo -e "\nRemoving uncompressed log files from $path_to_uncompressed_logs\n"
#rm -r $path_to_uncompressed_logs/*.log
echo -e "\nRemoving normalized log files from $path_to_uncompressed_logs\n"
#rm -r $path_to_uncompressed_logs/*.tmp

echo -e "Job $job_start_date has ended and ran for a duration of $[ $(date +%s) - ${job_start_date} ] seconds\n"

echo
